function [ COORDS ID MARKER_FOUND  ] = get_cups_instant( K_camera, colourVid, depthVid )
%get_cups_instant get coords and ID of all cups in scene
%Relative to kinect camera if MARKER_FOUND = 0
%   COORDS = [cup1x, cup1y, cup1z   ID = [cup1ID
%             cup2x, cup2y, cup2z         cup2ID
%                    ...                   ...
%             cupnx, cupny, cupnz]        cupnID]
%
    %Take photos
    image = getsnapshot(colourVid);
    depthImage = getsnapshot(depthVid);
    
    %Find bounding boxes of all cups
    [boxes, markers] = imageDetector(image);
    if(size(markers,1) > 0),
        MARKER_FOUND = 1;
    else
        MARKER_FOUND = 0;
    end
    for i = 1: size(markers, 1),
        try
            [COORD_MARKER, ZDIST_MARKER] = ID_marker(markers(i,:), image, depthImage, ...
                K_camera);
        catch err
            continue
        end
    end
    
    COORD_BOXES = [];
    ID_BOXES = [];
    for i = 1 : size(boxes,1), 
        try
            [COORD, ID, FILL, ZDIST, h] = ID_cups(boxes(i,:), ...
                image, depthImage, K_camera);
            COORD_BOXES = [COORD_BOXES; COORD];
            ID_BOXES = [
        catch err
            continue;
        end
    end
    %% Make sure windows doesn't shoot us
    flushdata(colourVid);
    flushdata(depthVid);
    
    %% Translate supported COORD points to world frame
    ANGLE = 35;%;25*pi/180; %30 degrees %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    for (i = 1:size(tempfull, 1)), %tempmarkerfull should only ever be 1 line
       tempfull(i,1:3) = kin2frame(tempmarkerfull(1:3), tempfull(i,1:3), 0, ANGLE, 0);
    end
    
    for (i = 1:size(tempglassfull,1)),
        tempglassfull(i,1:3) = kin2frame(tempmarkerfull(1:3), tempglassfull(i,1:3), 0, ANGLE, 0);
    end

    %% This is the part that makes pretty pictures
    for( i = 1:size(temp,1)),
       CUP(i,:) = sprintf('ID: %d @ %4.2f%%\n', ...
           round(cupSupportArray(arr(i),4) + 0.25), ... %Rounding up is hard
           (min((cupSupportArray(arr(i),12)/MAXIMAGE)*100, 100) - 0.01));
    end
    if exist('CUP', 'var'),
        CUP = cellstr(CUP);
    else
        CUP(1,:) = 'CUP';
    end
    
    for( i = 1:size(tempglass,1)),
       GLASS(i,:) = sprintf('Glass\n');
    end
    if exist('GLASS', 'var'),
        GLASS = cellstr(GLASS);
    else
        GLASS(1,:) = 'Glass\n';
    end
    
    disp(temp)
    detectedImg = insertObjectAnnotation(image, 'rectangle', temp, CUP);
    coffee = figure;
    imshow(detectedImg)
    saveas(coffee, 'output\IMCUPannotation', 'jpg');
    
    disp(tempglass)
    newimg = insertObjectAnnotation(image, 'rectangle', tempglass, GLASS);
    glasses = figure;
    imshow(newimg)
    saveas(glasses, 'output\IMGLASSannotation', 'jpg');
    
    disp(tempmarker)
    markerImg = insertObjectAnnotation(image, 'rectangle', tempmarker, 'Marker');
    markers = figure;
    imshow(markerImg);
    saveas(markers, 'output\IMMARKERannotation', 'jpg');
    
    %% Write CSV file
    f = fopen('output\output.txt', 'w+');
    for(i = 1:size(tempfull,1)),
                   fprintf(f, '%5.3f, %5.3f, %5.3f, %01d, %01d\r\n', ...
                tempfull(i,1), tempfull(i,2), tempfull(i,3), round(tempfull(i,4)+0.25), round(tempfull(i,5))); 
                %X, Y, Z, ID, FILL
    end
    
    for(i = 1:size(tempglassfull,1)),
                   fprintf(f, '%5.3f, %5.3f, %5.3f, %01d\r\n', ...
                tempglassfull(i,1), tempglassfull(i,2), tempglassfull(i,3), round(tempglassfull(i,5))); 
            %X Y Z FILL
    end
    fclose(f);

end

